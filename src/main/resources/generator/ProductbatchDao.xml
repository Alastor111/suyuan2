<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generator.ProductbatchDao">
  <resultMap id="BaseResultMap" type="generator.Productbatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="CHAR" property="code" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="beginDate" jdbcType="DATE" property="begindate" />
    <result column="endDate" jdbcType="DATE" property="enddate" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="yield" jdbcType="INTEGER" property="yield" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="area_id" jdbcType="VARCHAR" property="areaId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, product_id, beginDate, endDate, `state`, group_id, org_id, user_id, yield, 
    unit_id, area_id
  </sql>
  <select id="selectByExample" parameterType="generator.ProductbatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productbatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from productbatch
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from productbatch
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="generator.ProductbatchExample">
    delete from productbatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="generator.Productbatch">
    insert into productbatch (id, code, product_id, 
      beginDate, endDate, `state`, 
      group_id, org_id, user_id, 
      yield, unit_id, area_id
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=CHAR}, #{productId,jdbcType=INTEGER}, 
      #{begindate,jdbcType=DATE}, #{enddate,jdbcType=DATE}, #{state,jdbcType=INTEGER}, 
      #{groupId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{yield,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, #{areaId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="generator.Productbatch">
    insert into productbatch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="enddate != null">
        endDate,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="yield != null">
        yield,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=CHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="yield != null">
        #{yield,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.ProductbatchExample" resultType="java.lang.Long">
    select count(*) from productbatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productbatch
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=CHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.begindate != null">
        beginDate = #{record.begindate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null">
        endDate = #{record.enddate,jdbcType=DATE},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.yield != null">
        yield = #{record.yield,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productbatch
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=CHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      beginDate = #{record.begindate,jdbcType=DATE},
      endDate = #{record.enddate,jdbcType=DATE},
      `state` = #{record.state,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      yield = #{record.yield,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="generator.Productbatch">
    update productbatch
    <set>
      <if test="code != null">
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        endDate = #{enddate,jdbcType=DATE},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="yield != null">
        yield = #{yield,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="generator.Productbatch">
    update productbatch
    set code = #{code,jdbcType=CHAR},
      product_id = #{productId,jdbcType=INTEGER},
      beginDate = #{begindate,jdbcType=DATE},
      endDate = #{enddate,jdbcType=DATE},
      `state` = #{state,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      yield = #{yield,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>